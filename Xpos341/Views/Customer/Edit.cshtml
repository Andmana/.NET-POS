@using xpos341.viewmodels;
@model VMTblCustomer;
@{
    Layout = null;
    ViewData["Title"] = "Edit Customer";
}

<div class="card">
    <div class="card-body">

        <form asp-action="Create" method="post" id="form_edit">

            <input type="number" class="form-control" id="Id" name="Id" value="@Model.Id" hidden/>


            <div class="mb-4 row">
                <label for="NameCustomer" class="col-sm-4 col-form-label">Name Customer</label>
                <div class="col-sm-8">
                    <input type="text" class="form-control" id="NameCustomer" name="NameCustomer" value="@Model.NameCustomer" />
                </div>
            </div>

            <div class="mb-4 row">
                <label for="Email" class="col-sm-4 col-form-label">Email</label>
                <div class="col-sm-8">
                    <input type="email" class="form-control" id="Email" name="Email" value="@Model.Email" />
                    <span id="validate_EmailCustomer" class="text-danger"></span>
                    <span id="validate_Email" class="text-danger"></span>
                </div>
            </div>

            <div class="mb-4 row">
                <label for="Password" class="col-sm-4 col-form-label">Password</label>
                <div class="col-sm-8">
                    <input type="password" class="form-control" id="Password" name="Password" value="" />
                    <input type="checkbox" onclick="myFunction()">Show Password
                    <span id="validate_Password" class="text-danger"></span>
                </div>
            </div>

            <div class="mb-4 row">
                <label for="IdRole" class="col-sm-4 col-form-label">Role</label>
                <div class="col-sm-8">

                    @* IHTML helper *@
                    @Html.DropDownList("IdRole",
                             new SelectList(ViewBag.DropdownRoles, "Id", "RoleName"),
                             "--Pilih Role--",
                             new { @class = "form-control" }

                             )
                </div>
            </div>

            <div class="mb-4 row">
                <label for="Phone" class="col-sm-4 col-form-label">Phone</label>
                <div class="col-sm-8">
                    <input type="text" class="form-control" id="Phone" name="Phone" value="@Model.Phone" />
                    <span id="validate_Phone" class="text-danger"></span>
                </div>
            </div>

            <div class="mb-4 row">
                <label for="Address" class="col-sm-4 col-form-label">Address</label>
                <div class="col-sm-8">
                    <input type="text" class="form-control" id="Address" name="Address" value="@Model.Address" />
                    <span id="validate_Address" class="text-danger"></span>
                </div>
            </div>

            <div class="mb-4 row">
                <div class="col-sm-10">
                    <button type="submit" class="btn btn-primary">Submit</button>
                    <a class="btn btn-light fw-bold" asp-controller="Customer" asp-action="Index"> Back to list</a>
                </div>
            </div>

        </form>

    </div>
</div>

<script>
    $("#form_edit").validate({
        errorClass: "text-danger",
        rules: {
            NameCustomer: {
                required: true,
                minlength: 3,
            },
            Email: {
                required: true,
                email: true
            },
            IdRole: "required",
        },
        messages: {
            NameCustomer: {
                required: "Please fill Customer name",
                minLength: "Minimal character is 3"
            },
            Email: {
                required: "Please fill email",
                email: "Please FileList valid email address"
            },
            IdRole: {
                required: "Please select Role"
            },
        },
        submitHandler: function (form) {

            var id = $("#Email").val()
            var email = $("#Email").val()

            $.ajax({
                url: "/Customer/CheckExists",
                type: "get",
                data: {
                    email: email,
                    id: id,
                },
                dataType: "json",
                success: function (response) {
                    if (response) {
                        $("#validate_EmailCustomer").empty().text(`Email is already used`)
                        return true
                    }
                    else {
                        fungsiSubmit(form)
                    }

                }
            })
        }
    })
    function fungsiSubmit(form) {
        var dataForm = $(form).serialize()
        $.ajax({
            url: "Customer/Edit",
            type: "post",
            data: dataForm,
            dataType: "json",
            success: function (response) {
                var data = response.dataResponse
                if (data.success) {
                    $("#my_modal").modal("hide")
                    Swal.fire({
                        icon: "success",
                        title: "Customer Added",
                        text: data.message,
                        showConfirmButton: false,
                        timer: 1500
                    }).then(function () {
                            window.location.reload()
                    })
                }
                else {
                    toastr.errorClass(data.message)
                }

            }, error: function (response) {
                console.log(response)
            }

        })
    }
    function myFunction() {
        var x = document.getElementById("Password");
        if (x.type === "password") {
            x.type = "text";
        } else {
            x.type = "password";
        }
    }
</script>