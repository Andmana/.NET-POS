@using xpos341.viewmodels

@model PaginatedList<VMTblProduct>
@{
    var data = @ViewBag.dataHeader;
}


<div class="card-group">
    <div class="card border-right">
        <div class="card-body">
            <div class="d-flex d-lg-flex d-md-block align-items-center">
                <div>
                    <div class="d-inline-flex align-items-center">
                        <h2 id="totalproduct" class="text-dark mb-1 font-weight-medium">
                            @{
                                if (data != null)
                                {
                                    <span>@data.TotalQty</span>
                                }
                                else
                                {
                                    <span>0</span>
                                }
                            }
                        </h2>
                    </div>
                    <h6 class="text-muted font-weight-normal mb-0 w-100 text-truncate">Total Product</h6>
                </div>
                <div class="ml-auto mt-md-3 mt-lg-0">
                    <span class="opacity-7 text-muted">
                        <svg width="24" height="24" xmlns="http://www.w3.org/2000/svg" fill-rule="evenodd" clip-rule="evenodd"><path d="M2.978 8.358l-2.978-2.618 8.707-4.74 3.341 2.345 3.21-2.345 8.742 4.639-3.014 2.68.014.008 3 4.115-3 1.634v4.122l-9 4.802-9-4.802v-4.115l1 .544v2.971l7.501 4.002v-7.889l-2.501 3.634-9-4.893 2.978-4.094zm9.523 5.366v7.875l7.499-4.001v-2.977l-5 2.724-2.499-3.621zm-11.022-1.606l7.208 3.918 1.847-2.684-7.231-3.742-1.824 2.508zm11.989 1.247l1.844 2.671 7.208-3.927-1.822-2.498-7.23 3.754zm-9.477-4.525l8.01-4.43 7.999 4.437-7.971 4.153-8.038-4.16zm-2.256-2.906l2.106 1.851 7.16-3.953-2.361-1.657-6.905 3.759zm11.273-2.052l7.076 3.901 2.176-1.935-6.918-3.671-2.334 1.705z" /></svg>
                    </span>
                </div>
            </div>
        </div>
    </div>
    <div class="card border-right">
        <div class="card-body">
            <div class="d-flex d-lg-flex d-md-block align-items-center">
                <div>
                    <h2 class="text-dark mb-1 w-100 text-truncate font-weight-medium">
                    <sup class="set-doller">Rp</sup>
                        <text id="estimateprice" href="#">
                            @{
                                if (data != null)
                                {
                                    <span>@data.Amount</span>
                                }
                                else
                                {
                                    <span>0</span>
                                }
                            }
                        </text>
                    </h2>
                    <h6 class="text-muted font-weight-normal mb-0 w-100 text-truncate">
                        Estimate Prices
                    </h6>
                </div>
                <div class="ml-auto mt-md-3 mt-lg-0">
                    <svg width="24" height="24" xmlns="http://www.w3.org/2000/svg" fill-rule="evenodd" clip-rule="evenodd"><path d="M21.19 7h2.81v15h-21v-5h-2.81v-15h21v5zm1.81 1h-19v13h19v-13zm-9.5 1c3.036 0 5.5 2.464 5.5 5.5s-2.464 5.5-5.5 5.5-5.5-2.464-5.5-5.5 2.464-5.5 5.5-5.5zm0 1c2.484 0 4.5 2.016 4.5 4.5s-2.016 4.5-4.5 4.5-4.5-2.016-4.5-4.5 2.016-4.5 4.5-4.5zm.5 8h-1v-.804c-.767-.16-1.478-.689-1.478-1.704h1.022c0 .591.326.886.978.886.817 0 1.327-.915-.167-1.439-.768-.27-1.68-.676-1.68-1.693 0-.796.573-1.297 1.325-1.448v-.798h1v.806c.704.161 1.313.673 1.313 1.598h-1.018c0-.788-.727-.776-.815-.776-.55 0-.787.291-.787.622 0 .247.134.497.957.768 1.056.344 1.663.845 1.663 1.746 0 .651-.376 1.288-1.313 1.448v.788zm6.19-11v-4h-19v13h1.81v-9h17.19z" /></svg>
                </div>
            </div>
        </div>
    </div>
    <div class="card bg-primary" id="btn_checkout" style="cursor:pointer">
        <div class="card-body">
            <div class="d-flex d-lg-flex d-md-block align-items-center">
                <div>
                    <h2 class="text-light mb-1 font-weight-medium">CheckOut</h2>

                    <h6 class="text-dark font-weight-normal mb-0 w-100 text-truncate">More Info</h6>
                </div>
                <div class="ml-auto mt-md-3 mt-lg-0">
                    <span class="opacity-7 text-muted">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M10 19.5c0 .829-.672 1.5-1.5 1.5s-1.5-.671-1.5-1.5c0-.828.672-1.5 1.5-1.5s1.5.672 1.5 1.5zm3.5-1.5c-.828 0-1.5.671-1.5 1.5s.672 1.5 1.5 1.5 1.5-.671 1.5-1.5c0-.828-.672-1.5-1.5-1.5zm1.336-5l1.977-7h-16.813l2.938 7h11.898zm4.969-10l-3.432 12h-12.597l.839 2h13.239l3.474-12h1.929l.743-2h-4.195z" /></svg>
                    </span>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="card-header">
    <div class="card-tools">
        <button class="btn btn-primary" id="btn_search">
            <i class="fas fa-search"></i>
            Search
        </button>
    </div>
</div>

<div class="row">
    @foreach (var item in Model)
    {
        <div class="col-md-4">

            <div class="card card-primary card-outline">
                <div class="card-body box-profile">
                    <div class="text-center">
                        <img class="profile-user-img img-fluid img-circle img-responsive" src="~/images/@item.Image" alt="User profile picture">
                    </div>
                    <h3 class="profile-username text-center" id="name_@item.Id">@item.NameProduct</h3>
                    <p class="text-muted text-center">@item.NameCategory / @item.NameVariant</p>
                    <ul class="list-group list-group-unbordered mb-3">
                        <li class="list-group-item">
                            <b>Price</b> <a class="float-right" id="price_@item.Id">@item.Price</a>
                        </li>
                        <li class="list-group-item">
                            <b>Stock</b> <a class="float-right" id="stock_@item.Id">@item.Stock</a>
                            <span class="text-danger" id="valid_stock_@item.Id"></span>
                        </li>
                    </ul>
                    <div class="row">
                        <div class="col-4">
                            <a id="min" dataid="@item.Id" class="btn btn-danger btn_min">
                                <b>-</b>
                            </a>
                        </div>
                        <div class="col-4 text-center">
                            <span class="text-lg" id="totalitem_@item.Id">0</span>
                        </div>
                        <div class="col-4">
                            <a id="plus" dataid="@item.Id" class="btn btn-success float-right btn_plus">
                                <b>+</b>
                            </a>
                        </div>
                    </div>
                </div>

            </div>

        </div>
    }

</div>

<div class="card-footer">
    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }
    <div class="row">
        <div class="col-2">

            <form asp-action="Catalog" id="form_pagesize">
                <select name="PageSize" id="PageSize"
                        class="form-control">
                    <option value="3">3</option>
                    <option value="5">5</option>
                    <option value="10">10</option>
                </select>
            </form>
        </div>

        <div class="col-10">
            Page @Model.PageIndex of @Model.TotalPages
            <a id="aNext" asp-action="Catalog"
               asp-route-sortOrder="@ViewBag.CurrentSort"
               asp-route-pageNumber="@(Model.PageIndex + 1)"
               asp-route-currentFilter="@ViewBag.CurrentFilter"
               asp-route-pageSize="@ViewBag.CurrentPageSize"
               class="btn btn-info float-right @nextDisabled">
                Next
            </a>
            <a id="aPrev" asp-action="Catalog"
               asp-route-sortOrder="@ViewBag.CurrentSort"
               asp-route-pageNumber="@(Model.PageIndex - 1)"
               asp-route-currentFilter="@ViewBag.CurrentFilter"
               asp-route-pageSize="@ViewBag.CurrentPageSize"
               class="btn btn-info float-right @prevDisabled">
                Previous
            </a>
        </div>
    </div>
</div>

<script>

    let data = {}

    var totalproduct = parseInt($("#totalproduct").text())
    var estimateprice = parseInt($("#estimateprice").text())
    var obj = {}

    //set ListCart first load
    var ListCart = @Html.Raw(ViewBag.dataDetail)

    setTransaction()

    //set product choose
    function setTransaction(){
        if(ListCart != null) {
            $.each(ListCart, function(index, element){

                var id = element.IdProduct
                $("#totalitem_" + id).text(element.Qty)
                $("#stock_" + id).text(element.Stock)
            })
        }
    }

    $(".btn_plus").click(function(){
        if(ListCart == null || ListCart.length == 0){
            ListCart = @Html.Raw(ViewBag.dataDetail)
        }

        obj = {}

        var id = parseInt($(this).attr("dataid"))
        var idprice = "#price_"+id
        var idtotalitem = "#totalitem_"+id
        var idstock = "#stock_"+id
        var idname = "#name_"+id

        var totalitem = parseInt($(idtotalitem).text())
        var price = parseInt($(idprice).text())
        var stock = parseInt($(idstock).text())
        var nameProduct = $(idname).text()

        validateStock(id,stock)

        if(stock > 0){
            totalproduct++
            totalitem++
            stock--
            estimateprice = estimateprice + price

            $("#totalproduct").text(totalproduct)
            $("#estimateprice").text(estimateprice)

            $(idstock).text(stock)
            $(idtotalitem).text(totalitem)
        }

        obj.IdProduct = id
        obj.Qty = totalitem
        obj.SumPrice = price * totalitem
        obj.Price = price
        obj.NameProduct = nameProduct
        obj.Stock = stock

        addList(id, obj)

        //console.log(ListCart)

        setSession()
    })


    $(".btn_min").click(function(){
        if(ListCart == null || ListCart.length == 0){
            ListCart = @Html.Raw(ViewBag.dataDetail)
        }

        var id = parseInt($(this).attr("dataid"))
        var idprice = "#price_"+id
        var idtotalitem = "#totalitem_"+id
        var idstock = "#stock_"+id
        var idname = "#name_"+id


        var totalitem = parseInt($(idtotalitem).text())
        var price = parseInt($(idprice).text())
        var stock = parseInt($(idstock).text())
        var nameProduct = $(idname).text()


        if(totalitem > 0)
        {
            totalproduct--
            totalitem--
            stock++
            estimateprice = estimateprice - price

        }

        validateStock(id,stock)

        $("#totalproduct").text(totalproduct)
        $("#estimateprice").text(estimateprice)

        $(idtotalitem).text(totalitem)
        $(idstock).text(stock)

        obj.IdProduct = id
        obj.Qty = totalitem
        obj.SumPrice = price * totalitem
        obj.Price = price
        obj.NameProduct = nameProduct
        obj.Stock = stock

        spliceList(id, obj)

        //console.log(ListCart)

        setSession()
    })

    function addList(id, obj)
    {
        const index = ListCart.map(e => e.IdProduct).indexOf(id);

        if(index == -1)
        {
            ListCart.push(obj)
        }
        else
        {
            ListCart[index].Qty = obj.Qty
            ListCart[index].Stock = obj.Stock
            ListCart[index].SumPrice = obj.SumPrice
        }
    }
         
    function spliceList(id, obj)
    {
        const index = ListCart.map(e => e.IdProduct).indexOf(id);
            
        if(index != -1)
        {
            ListCart[index].Qty = obj.Qty
            ListCart[index].Stock = obj.Stock
            ListCart[index].SumPrice = obj.SumPrice

            if(obj.Qty == 0)
            {
                ListCart.splice(index,1)
            }
        }
    }

    function validateStock(id, stock){

        if(stock == 0){
            $("#valid_stock_"+ id).text("out of stock")
        }
        else{
            $("#valid_stock_"+ id).empty()
        }
    }

    function setSession(){
            data = {
                TotalQty: totalproduct,
                Amount: estimateprice,
                ListDetails: ListCart
            }

            data.namacustomer = ""
            data.idcustomer = 1

            $.ajax({
            url  :"/Order/SetSession",
            data : {dataHeader : data},
            type : "post",
            dataType : "json",
            success : function(respon){
                //alert("set session done")
            }
        })
    }

    $("#btn_checkout").click(function(){

        data = {
            TotalQty: totalproduct,
            Amount: estimateprice,
            ListDetails: ListCart
        }

        $("#modal_body").empty();

        //Cara addClass
        $(".modal-dialog").addClass("modal-lg")

        if(ListCart.length > 0){
            $("#modal_body").load("/Order/OrderPreview", data)
        }
        else{
                $("#modal_body").text("please select product before")
        }
        $("#my_modal").modal("show");
    })




    $("#btn_search").click(function(){
        $("#modal_body").empty()
        $("#modal_body").load("/Order/SearchMenu")
        $("#my_modal").modal("show")

        //Cara removeClass
        $(".modal-dialog").removeClass("modal-lg")
    })

    $("#PageSize").val(@ViewBag.CurrentPageSize)

    $("#PageSize").change(function(){
        $("#form_pagesize").submit();
    })

</script>